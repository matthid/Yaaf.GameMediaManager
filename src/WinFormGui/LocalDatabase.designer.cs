#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.269
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Yaaf.WirePlugin.WinFormGui.Database
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="D:\\Projects\\Aktuell\\WireYaafCssPlugin\\Yaaf\\src\\WinFormGui\\LocalDatabase.sdf")]
	public partial class LocalDatabaseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertAction(Action instance);
    partial void UpdateAction(Action instance);
    partial void DeleteAction(Action instance);
    partial void InsertActionObject(ActionObject instance);
    partial void UpdateActionObject(ActionObject instance);
    partial void DeleteActionObject(ActionObject instance);
    partial void InsertFilter(Filter instance);
    partial void UpdateFilter(Filter instance);
    partial void DeleteFilter(Filter instance);
    partial void InsertGame(Game instance);
    partial void UpdateGame(Game instance);
    partial void DeleteGame(Game instance);
    partial void InsertMatchFormAction(MatchFormAction instance);
    partial void UpdateMatchFormAction(MatchFormAction instance);
    partial void DeleteMatchFormAction(MatchFormAction instance);
    partial void InsertObjectParameter(ObjectParameter instance);
    partial void UpdateObjectParameter(ObjectParameter instance);
    partial void DeleteObjectParameter(ObjectParameter instance);
    partial void InsertWatchFolder(WatchFolder instance);
    partial void UpdateWatchFolder(WatchFolder instance);
    partial void DeleteWatchFolder(WatchFolder instance);
    #endregion
		
		public LocalDatabaseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocalDatabaseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocalDatabaseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public LocalDatabaseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Action> Actions
		{
			get
			{
				return this.GetTable<Action>();
			}
		}
		
		public System.Data.Linq.Table<ActionObject> ActionObjects
		{
			get
			{
				return this.GetTable<ActionObject>();
			}
		}
		
		public System.Data.Linq.Table<Filter> Filters
		{
			get
			{
				return this.GetTable<Filter>();
			}
		}
		
		public System.Data.Linq.Table<Game> Games
		{
			get
			{
				return this.GetTable<Game>();
			}
		}
		
		public System.Data.Linq.Table<MatchFormAction> MatchFormActions
		{
			get
			{
				return this.GetTable<MatchFormAction>();
			}
		}
		
		public System.Data.Linq.Table<ObjectParameter> ObjectParameters
		{
			get
			{
				return this.GetTable<ObjectParameter>();
			}
		}
		
		public System.Data.Linq.Table<WatchFolder> WatchFolders
		{
			get
			{
				return this.GetTable<WatchFolder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Action : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private byte _Parameters;
		
		private EntitySet<ActionObject> _ActionObject;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParametersChanging(byte value);
    partial void OnParametersChanged();
    #endregion
		
		public Action()
		{
			this._ActionObject = new EntitySet<ActionObject>(new Action<ActionObject>(this.attach_ActionObject), new Action<ActionObject>(this.detach_ActionObject));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameters", DbType="TinyInt NOT NULL")]
		public byte Parameters
		{
			get
			{
				return this._Parameters;
			}
			set
			{
				if ((this._Parameters != value))
				{
					this.OnParametersChanging(value);
					this.SendPropertyChanging();
					this._Parameters = value;
					this.SendPropertyChanged("Parameters");
					this.OnParametersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionObject", Storage="_ActionObject", ThisKey="Id", OtherKey="ActionId")]
		public EntitySet<ActionObject> ActionObject
		{
			get
			{
				return this._ActionObject;
			}
			set
			{
				this._ActionObject.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionObject(ActionObject entity)
		{
			this.SendPropertyChanging();
			entity.Action = this;
		}
		
		private void detach_ActionObject(ActionObject entity)
		{
			this.SendPropertyChanging();
			entity.Action = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="ActionObjects")]
	public partial class ActionObject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ActionId;
		
		private int _FilterId;
		
		private string _Name;
		
		private EntitySet<ObjectParameter> _ObjectParameter;
		
		private EntityRef<Action> _Action;
		
		private EntityRef<Filter> _Filter;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnActionIdChanging(int value);
    partial void OnActionIdChanged();
    partial void OnFilterIdChanging(int value);
    partial void OnFilterIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
		
		public ActionObject()
		{
			this._ObjectParameter = new EntitySet<ObjectParameter>(new Action<ObjectParameter>(this.attach_ObjectParameter), new Action<ObjectParameter>(this.detach_ObjectParameter));
			this._Action = default(EntityRef<Action>);
			this._Filter = default(EntityRef<Filter>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionId", DbType="Int NOT NULL")]
		public int ActionId
		{
			get
			{
				return this._ActionId;
			}
			set
			{
				if ((this._ActionId != value))
				{
					if ((this._Action.HasLoadedOrAssignedValue || this._Filter.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnActionIdChanging(value);
					this.SendPropertyChanging();
					this._ActionId = value;
					this.SendPropertyChanged("ActionId");
					this.OnActionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilterId", DbType="Int NOT NULL")]
		public int FilterId
		{
			get
			{
				return this._FilterId;
			}
			set
			{
				if ((this._FilterId != value))
				{
					this.OnFilterIdChanging(value);
					this.SendPropertyChanging();
					this._FilterId = value;
					this.SendPropertyChanged("FilterId");
					this.OnFilterIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionObject_ObjectParameter", Storage="_ObjectParameter", ThisKey="Id", OtherKey="ObjectId")]
		public EntitySet<ObjectParameter> ObjectParameter
		{
			get
			{
				return this._ObjectParameter;
			}
			set
			{
				this._ObjectParameter.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Action_ActionObject", Storage="_Action", ThisKey="ActionId", OtherKey="Id", IsForeignKey=true)]
		public Action Action
		{
			get
			{
				return this._Action.Entity;
			}
			set
			{
				Action previousValue = this._Action.Entity;
				if (((previousValue != value) 
							|| (this._Action.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Action.Entity = null;
						previousValue.ActionObject.Remove(this);
					}
					this._Action.Entity = value;
					if ((value != null))
					{
						value.ActionObject.Add(this);
						this._ActionId = value.Id;
					}
					else
					{
						this._ActionId = default(int);
					}
					this.SendPropertyChanged("Action");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_ActionObject", Storage="_Filter", ThisKey="ActionId", OtherKey="Id", IsForeignKey=true)]
		public Filter Filter
		{
			get
			{
				return this._Filter.Entity;
			}
			set
			{
				Filter previousValue = this._Filter.Entity;
				if (((previousValue != value) 
							|| (this._Filter.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Filter.Entity = null;
						previousValue.ActionObject.Remove(this);
					}
					this._Filter.Entity = value;
					if ((value != null))
					{
						value.ActionObject.Add(this);
						this._ActionId = value.Id;
					}
					else
					{
						this._ActionId = default(int);
					}
					this.SendPropertyChanged("Filter");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ObjectParameter(ObjectParameter entity)
		{
			this.SendPropertyChanging();
			entity.ActionObject = this;
		}
		
		private void detach_ObjectParameter(ObjectParameter entity)
		{
			this.SendPropertyChanging();
			entity.ActionObject = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class Filter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private byte _Parameter;
		
		private EntitySet<ActionObject> _ActionObject;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnParameterChanging(byte value);
    partial void OnParameterChanged();
    #endregion
		
		public Filter()
		{
			this._ActionObject = new EntitySet<ActionObject>(new Action<ActionObject>(this.attach_ActionObject), new Action<ActionObject>(this.detach_ActionObject));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(128) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="TinyInt NOT NULL")]
		public byte Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Filter_ActionObject", Storage="_ActionObject", ThisKey="Id", OtherKey="ActionId")]
		public EntitySet<ActionObject> ActionObject
		{
			get
			{
				return this._ActionObject;
			}
			set
			{
				this._ActionObject.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ActionObject(ActionObject entity)
		{
			this.SendPropertyChanging();
			entity.Filter = this;
		}
		
		private void detach_ActionObject(ActionObject entity)
		{
			this.SendPropertyChanging();
			entity.Filter = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="Games")]
	public partial class Game : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Shortname;
		
		private bool _EnableNotification;
		
		private bool _EnableMatchForm;
		
		private bool _EnablePublicNotification;
		
		private bool _EnableWarMatchForm;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnShortnameChanging(string value);
    partial void OnShortnameChanged();
    partial void OnEnableNotificationChanging(bool value);
    partial void OnEnableNotificationChanged();
    partial void OnEnableMatchFormChanging(bool value);
    partial void OnEnableMatchFormChanged();
    partial void OnEnablePublicNotificationChanging(bool value);
    partial void OnEnablePublicNotificationChanged();
    partial void OnEnableWarMatchFormChanging(bool value);
    partial void OnEnableWarMatchFormChanged();
    #endregion
		
		public Game()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shortname", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string Shortname
		{
			get
			{
				return this._Shortname;
			}
			set
			{
				if ((this._Shortname != value))
				{
					this.OnShortnameChanging(value);
					this.SendPropertyChanging();
					this._Shortname = value;
					this.SendPropertyChanged("Shortname");
					this.OnShortnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableNotification", DbType="Bit NOT NULL")]
		public bool EnableNotification
		{
			get
			{
				return this._EnableNotification;
			}
			set
			{
				if ((this._EnableNotification != value))
				{
					this.OnEnableNotificationChanging(value);
					this.SendPropertyChanging();
					this._EnableNotification = value;
					this.SendPropertyChanged("EnableNotification");
					this.OnEnableNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableMatchForm", DbType="Bit NOT NULL")]
		public bool EnableMatchForm
		{
			get
			{
				return this._EnableMatchForm;
			}
			set
			{
				if ((this._EnableMatchForm != value))
				{
					this.OnEnableMatchFormChanging(value);
					this.SendPropertyChanging();
					this._EnableMatchForm = value;
					this.SendPropertyChanged("EnableMatchForm");
					this.OnEnableMatchFormChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnablePublicNotification", DbType="Bit NOT NULL")]
		public bool EnablePublicNotification
		{
			get
			{
				return this._EnablePublicNotification;
			}
			set
			{
				if ((this._EnablePublicNotification != value))
				{
					this.OnEnablePublicNotificationChanging(value);
					this.SendPropertyChanging();
					this._EnablePublicNotification = value;
					this.SendPropertyChanged("EnablePublicNotification");
					this.OnEnablePublicNotificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnableWarMatchForm", DbType="Bit NOT NULL")]
		public bool EnableWarMatchForm
		{
			get
			{
				return this._EnableWarMatchForm;
			}
			set
			{
				if ((this._EnableWarMatchForm != value))
				{
					this.OnEnableWarMatchFormChanging(value);
					this.SendPropertyChanging();
					this._EnableWarMatchForm = value;
					this.SendPropertyChanged("EnableWarMatchForm");
					this.OnEnableWarMatchFormChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="MatchFormActions")]
	public partial class MatchFormAction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _GameId;
		
		private int _ActionObjectId;
		
		private System.DateTime _LastUsed;
		
		private bool _SetWarDefault;
		
		private bool _SetPublicDefault;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGameIdChanging(int value);
    partial void OnGameIdChanged();
    partial void OnActionObjectIdChanging(int value);
    partial void OnActionObjectIdChanged();
    partial void OnLastUsedChanging(System.DateTime value);
    partial void OnLastUsedChanged();
    partial void OnSetWarDefaultChanging(bool value);
    partial void OnSetWarDefaultChanged();
    partial void OnSetPublicDefaultChanging(bool value);
    partial void OnSetPublicDefaultChanged();
    #endregion
		
		public MatchFormAction()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameId", DbType="Int NOT NULL")]
		public int GameId
		{
			get
			{
				return this._GameId;
			}
			set
			{
				if ((this._GameId != value))
				{
					this.OnGameIdChanging(value);
					this.SendPropertyChanging();
					this._GameId = value;
					this.SendPropertyChanged("GameId");
					this.OnGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ActionObjectId", DbType="Int NOT NULL")]
		public int ActionObjectId
		{
			get
			{
				return this._ActionObjectId;
			}
			set
			{
				if ((this._ActionObjectId != value))
				{
					this.OnActionObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ActionObjectId = value;
					this.SendPropertyChanged("ActionObjectId");
					this.OnActionObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastUsed", DbType="DateTime NOT NULL")]
		public System.DateTime LastUsed
		{
			get
			{
				return this._LastUsed;
			}
			set
			{
				if ((this._LastUsed != value))
				{
					this.OnLastUsedChanging(value);
					this.SendPropertyChanging();
					this._LastUsed = value;
					this.SendPropertyChanged("LastUsed");
					this.OnLastUsedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetWarDefault", DbType="Bit NOT NULL")]
		public bool SetWarDefault
		{
			get
			{
				return this._SetWarDefault;
			}
			set
			{
				if ((this._SetWarDefault != value))
				{
					this.OnSetWarDefaultChanging(value);
					this.SendPropertyChanging();
					this._SetWarDefault = value;
					this.SendPropertyChanged("SetWarDefault");
					this.OnSetWarDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SetPublicDefault", DbType="Bit NOT NULL")]
		public bool SetPublicDefault
		{
			get
			{
				return this._SetPublicDefault;
			}
			set
			{
				if ((this._SetPublicDefault != value))
				{
					this.OnSetPublicDefaultChanging(value);
					this.SendPropertyChanging();
					this._SetPublicDefault = value;
					this.SendPropertyChanged("SetPublicDefault");
					this.OnSetPublicDefaultChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class ObjectParameter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _ObjectId;
		
		private byte _Type;
		
		private byte _ParamNum;
		
		private string _Parameter;
		
		private EntityRef<ActionObject> _ActionObject;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnObjectIdChanging(int value);
    partial void OnObjectIdChanged();
    partial void OnTypeChanging(byte value);
    partial void OnTypeChanged();
    partial void OnParamNumChanging(byte value);
    partial void OnParamNumChanged();
    partial void OnParameterChanging(string value);
    partial void OnParameterChanged();
    #endregion
		
		public ObjectParameter()
		{
			this._ActionObject = default(EntityRef<ActionObject>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ObjectId", DbType="Int NOT NULL")]
		public int ObjectId
		{
			get
			{
				return this._ObjectId;
			}
			set
			{
				if ((this._ObjectId != value))
				{
					if (this._ActionObject.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnObjectIdChanging(value);
					this.SendPropertyChanging();
					this._ObjectId = value;
					this.SendPropertyChanged("ObjectId");
					this.OnObjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="TinyInt NOT NULL")]
		public byte Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParamNum", DbType="TinyInt NOT NULL")]
		public byte ParamNum
		{
			get
			{
				return this._ParamNum;
			}
			set
			{
				if ((this._ParamNum != value))
				{
					this.OnParamNumChanging(value);
					this.SendPropertyChanging();
					this._ParamNum = value;
					this.SendPropertyChanged("ParamNum");
					this.OnParamNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Parameter", DbType="NVarChar(4000)")]
		public string Parameter
		{
			get
			{
				return this._Parameter;
			}
			set
			{
				if ((this._Parameter != value))
				{
					this.OnParameterChanging(value);
					this.SendPropertyChanging();
					this._Parameter = value;
					this.SendPropertyChanged("Parameter");
					this.OnParameterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ActionObject_ObjectParameter", Storage="_ActionObject", ThisKey="ObjectId", OtherKey="Id", IsForeignKey=true)]
		public ActionObject ActionObject
		{
			get
			{
				return this._ActionObject.Entity;
			}
			set
			{
				ActionObject previousValue = this._ActionObject.Entity;
				if (((previousValue != value) 
							|| (this._ActionObject.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ActionObject.Entity = null;
						previousValue.ObjectParameter.Remove(this);
					}
					this._ActionObject.Entity = value;
					if ((value != null))
					{
						value.ObjectParameter.Add(this);
						this._ObjectId = value.Id;
					}
					else
					{
						this._ObjectId = default(int);
					}
					this.SendPropertyChanged("ActionObject");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute()]
	public partial class WatchFolder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _GameId;
		
		private string _Folder;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnGameIdChanging(int value);
    partial void OnGameIdChanged();
    partial void OnFolderChanging(string value);
    partial void OnFolderChanged();
    #endregion
		
		public WatchFolder()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GameId", DbType="Int NOT NULL")]
		public int GameId
		{
			get
			{
				return this._GameId;
			}
			set
			{
				if ((this._GameId != value))
				{
					this.OnGameIdChanging(value);
					this.SendPropertyChanging();
					this._GameId = value;
					this.SendPropertyChanged("GameId");
					this.OnGameIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Folder", DbType="NVarChar(4000) NOT NULL", CanBeNull=false)]
		public string Folder
		{
			get
			{
				return this._Folder;
			}
			set
			{
				if ((this._Folder != value))
				{
					this.OnFolderChanging(value);
					this.SendPropertyChanging();
					this._Folder = value;
					this.SendPropertyChanged("Folder");
					this.OnFolderChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
